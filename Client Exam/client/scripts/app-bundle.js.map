{"version":3,"sources":["../src/app.js","../src/app.html","../src/auth-config.js","../src/environment.js","../src/main.js","../src/modules/components/editUser.html","../src/modules/components/widgetsForm.html","../src/modules/components/widgetsTable.html","../src/modules/home.js","../src/modules/home.html","../src/modules/users.js","../src/modules/users.html","../src/modules/widgets.js","../src/modules/widgets.html","../src/resources/data/data-services.js","../src/resources/data/user-object.js","../src/resources/data/widget-object.js","../src/resources/elements/flat-picker/flat-picker.js","../src/resources/elements/flat-picker/flat-picker.html","../src/resources/elements/nav-bar.js","../src/resources/elements/nav-bar.html","../src/resources/index.js","../src/resources/value-converters/date-format.js","../src/resources/value-converters/filter-todos.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","environment","start","then","setRoot","Home","Router","message","login","navigate","Users","User","users","newUser","user","fname","lname","active","role","email","password","save","saveUser","Todos","Todo","todo","isCheckedCompleted","attached","getTodos","showForm","updateTodo","selectedTodo","saveTodo","newTodo","editTodo","Cancel","deleteTodo","_id","DataServices","HttpClient","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","localStorage","getItem","withInterceptor","request","console","log","response","get","url","fetch","json","data","catch","error","post","content","method","body","object","put","delete","USER_SERVICE","serverResponse","TODO_SERVICE","id","Boo","Hoo","Date","userid","todosArray","FlatPickerCustomElement","Element","defaultBindingMode","bindingMode","twoWay","element","backgroundColor","bind","defaultConfig","altInput","altFormat","minDate","startdate","maxDate","enddate","wrap","onReady","dateObj","dateStr","instance","$cal","$","calendarContainer","find","length","append","on","clear","close","_config","Object","assign","onChange","onMonthChange","onYearChange","flatpickr","Flatpickr","querySelector","valueChanged","fireEvent","type","changeEvent","window","CustomEvent","detail","value","bubbles","document","createEvent","initCustomEvent","dispatchEvent","startdateChanged","newValue","oldValue","set","enddateChanged","selectedDates","_datesAreSynced","undefined","_cloneDate","d","date","newDate","Array","isArray","setDate","model","view","modelDates","modelDate","findIndex","v","valueOf","viewDate","m","getTime","bindable","NavBar","AuthService","authenticated","loginError","removeClass","parent","addClass","userObj","sessionStorage","setItem","JSON","stringify","isAuthenticated","logout","removeItem","registerUser","globalResources","DateFormatValueConverter","toView","dateFormatted","format","FilterTodosValueConverter","todos","nofilterTodos","filteredTodos","forEach","status","push"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    // config.addPipelineStep('authorize', AuthorizeStep); \n    config.title = 'Widgets';\n    config.map([\n      {\n        route: ['', 'widgets'],\n        name: 'widgets',\n        moduleId: 'modules/widgets',\n        title: 'Widgets',\n        auth: false\n      }\n\n      // {\n      //   route: ['', 'home'],\n      //   name: 'home',\n      //   moduleId: 'modules/home',\n      //   title: 'Home',\n      //   auth: false\n      // },\n      // {\n      //   route: 'users',\n      //   name: 'users',\n      //   moduleId: 'modules/users',\n      //   title: 'Users',\n      //   auth: true\n\n      // },\n      // {\n      //   route: 'todos',\n      //   name: 'todos',\n      //   moduleId: 'modules/todos',\n      //   title: 'Todos',\n      //   auth: true\n      // }\n    ]);\n  }\n}\n","<template>\n  <!-- <nav-bar></nav-bar> -->\n  <router-view></router-view>\n</template>\n","var authConfig = {\n    baseUrl: \"http://localhost:5000/api\",\n    loginUrl: '/users/login',\n    tokenName: 'token',\n    authHeader: 'Authorization',\n    authToken: '',\n    logoutRedirect: '#/home'\n  }\n  \n  export default authConfig;","export default {\n  debug: true,\n  testing: true\n};\n","// regenerator-runtime is to support async/await syntax in ESNext.\n// If you don't use async/await, you can remove regenerator-runtime.\nimport 'regenerator-runtime/runtime';\nimport environment from './environment';\nimport config from './auth-config';\n\n\n// Promise.config({ warnings: { wForgottenReturn: false } });\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig) => {\n      baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","<template>\n        First Name: <input value.bind=\"user.fname\">\n        Last Name: <input value.bind=\"user.lname\">\n    Active: <input value.bind=\"user.active\">\n    Role: <input value.bind=\"user.role\">\n        Email: <input value.bind=\"user.email\">\n        Password: <input value.bind=\"user.password\">\n        <button click.trigger=\"save()\">Save</button>\n</template>","<template>\n        <form>\n                <div class=\"form-group\">\n                  <!-- <label for=\"todoInput\">Todo</label> -->\n                  <label for=\"todoInput\">Boo</label>\n                  <input value.bind=\"todo.selectedTodo.Boo\" type=\"text\" class=\"form-control\" id=\"todoInput\"\n                    placeholder=\"Boo\">\n                \n                </div>\n                <!--<div class=\"form-group\">\n                  <label for=\"todoDetail\">Hoo</label>\n                  <input value.bind=\"todo.selectedTodo.Hoo\" type=\"number\" class=\"form-control\" id=\"todoInput\" placeholder=\"hoo\">\n                   <textarea value.bind=\"todo.selectedTodo.detail\" class=\"form-control\" id=\"todoDetail\" rows=\"5\"></textarea> \n                </div>-->\n                <!-- <div class=\"form-group\">\n                  <label for=\"todoStatus\">Status</label>\n                  <select value.bind=\"todo.selectedTodo.status\" class=\"form-control\" id=\"todoStatus\">\n                    <option repeat.for=\"status of statuses\" model.bind=\"status\">${status}</option>\n                  </select>\n                </div>-->\n                <div class=\"form-group\">\n                  <label for=\"todoStatus\">Hoo</label>\n                  <flat-picker controlid=\"startDate\" value.bind=\"todo.selectedTodo.Hoo\"></flat-picker>\n                </div>\n                <button class=\"btn btn-primary\" click.trigger=\"saveTodo()\">Save</button>\n                <button class=\"btn btn-primary\" click.trigger=\"cancel()\">Cancel</button>\n              </form>\n    </template>\n","<template>\n    <button class=\"btn btn-primary\" click.trigger=\"newTodo()\" style=\"margin-bottom:10px;\">Create Widget</button>\n    <table class=\"table\">\n        <thead>\n            <!-- <tr>\n                <th colspan=\"3\">\n                    <div class=\"checkbox leftMargin\"><label><input checked.bind=\"isCheckedCompleted\" type=\"checkbox\">\n                            Filter out Completed Todos</label></div>\n                </th>\n            </tr> -->\n            <tr>\n              <th scope=\"col\">Boo</th>\n              <th scope=\"col\">Hoo</th>\n                <!-- <th scope=\"col\">Todo</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Due Date</th>\n                <th scope=\"col\"></th> -->\n            </tr>\n        </thead>\n        <tbody>\n            <tr repeat.for=\"todo of todo.todosArray | filterTodos:isCheckedCompleted\">\n                <td scope=\"row\" click.delegate=\"editTodo(todo)\">${todo.Boo}</td>\n                <!-- <td scope=\"row\" click.delegate=\"editTodo(todo)\">${todo.Hoo}</td> -->\n                <!-- <td><select change.delegate=\"updateTodo(todo)\" value.bind=\"todo.status\" class=\"form-control\"\n                        id=\"todoStatus\">\n                        <option repeat.for=\"status of statuses\" value.bind=\"status\">${status}</option>\n                    </select></td>-->\n                <td>${todo.Hoo | dateFormat}</td> \n                <td>\n                    <button click.trigger=\"deleteTodo(todo)\" onClick=\"window.location.href=window.location.href\" type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\n@inject(Router)\nexport class Home {\n  constructor(router) {\n    this.router = router;\n    this.message = 'Home';\n  }\n\n  login() {\n    this.router.navigate('users');\n  }\n}\n","<template>\n\t<h1>${message}</h1>\n\t<button class=\"btn btn-primary\" click.trigger=\"login()\">Login</button>\n</template>\n","import { inject } from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport { User } from '../resources/data/user-object';\n\n@inject(Router, User)\nexport class Users {\n  constructor(router, users ) {\n  this.router = router;\n  this.users = users;\n  this.message = 'Users';\n  }\n\n    newUser() {\n        this.user = {\n            fname: \"\",\n            lname: \"\",\n            active: true,\n            role: \"user\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    async save() {\n        if (this.user && this.user.fname && this.user.lname\n            && this.user.email && this.user.password) {\n            await this.users.saveUser(this.user);\n        }\n    }\n\n}\n","<template>\n        <h1>${message}</h1>\n        <button click.trigger=\"newUser()\">New User</button>\n         <compose view=\"./components/editUser.html\"></compose>\n</template>","import { inject } from 'aurelia-framework';\nimport { Todo } from '../resources/data/widget-object';\n\n@inject(Todo)\nexport class Todos {\n\n  constructor(todo) {\n    this.todo = todo;\n    //this.userObj = JSON.parse(sessionStorage.getItem('userObj'));\n    //this.statuses = ['Todo', 'In Process', 'Completed'];\n    this.isCheckedCompleted = true;\n  }\n\n  async attached() {\n    await this.getTodos();\n  }\n  async getTodos() {\n   // await this.todo.getTodos(this.userObj._id);\n    await this.todo.getTodos();\n    this.showForm = false;\n  }\n\n  updateTodo(todo) {\n    this.todo.selectedTodo = todo;\n    this.saveTodo();\n  }\n\n\n\n  newTodo() {\n    //this.todo.newTodo(this.userObj._id);\n    this.todo.newTodo();\n    this.showForm = true;\n  }\n\n  editTodo(todo) {\n    this.todo.selectedTodo = todo;\n    this.showForm = true;\n  }\n\n  async saveTodo() {\n    await this.todo.saveTodo()\n    this.getTodos();\n  }\n\n  // async deleteTodos() {\n  //   await this.todo.deleteTodos(this.todo._id);\n  //   this.getTodos();\n  // }\n\n  Cancel() {\n    this.showForm = false;\n  }\n\n  updateTodo(todo) {\n    this.todo.selectedTodo = todo;\n    this.saveTodo();\n  }\n  async deleteTodo(todo) {\n    //await this.todo.deleteTodo(todo._id);\n    await this.todo.deleteTodo(todo._id);\n    //await this.todo.deleteTodo(todo.Hoo);\n    this.getTodos();\n  }\n\n}\n\n","<template>\n\n<div class=\"container\" style=\"margin-top:75px;\">\n        <compose show.bind=\"showForm\" view=\"./components/widgetsForm.html\"></compose>\n        <compose show.bind=\"!showForm\" view=\"./components/widgetsTable.html\"></compose>\n      </div>\n\n    </template>\n","import { inject } from 'aurelia-framework';\nimport { HttpClient, json } from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n    \n    constructor(http) {\n        this.httpClient = http;\n        this.BASE_URL = \"http://localhost:3000/api/\";\n        this.httpClient.configure(config => {\n            config\n                .withBaseUrl(this.BASE_URL)\n                .withDefaults({\n                    credentials: 'same-origin',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-Requested-With': 'Fetch',\n                        'Authorization' : 'Bearer' + localStorage.getItem('aurelia_token')\n                    }\n                })\n                .withInterceptor({\n                    request(request) {\n                        console.log('Requesting ${request.method} ${request.url}');\n                        return request;\n                    }, \n                    response(response) {\n                        console.log('Received ${response.status} ${response.url}');\n                        return response;\n                    }\n                });\n        });\n\n    }\n    get(url) {\n        return this.httpClient.fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    post(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    put(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'put',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    delete(url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'delete'\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n@inject(DataServices)\nexport class User {\nconstructor(data) {\n        this.data = data;\n        this.USER_SERVICE = 'users';\n    }\nasync saveUser(user){\n    if(user){\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\n         return serverResponse;\n }\n}\n\n}\n","import {inject} from 'aurelia-framework';\nimport { DataServices } from './data-services';\n@inject(DataServices)\nexport class Todo {\n    constructor(data) {\n        this.data = data;\n        this.TODO_SERVICE = 'widgets';\n    }\n    newTodo(id) {\n        this.selectedTodo = {};\n        this.selectedTodo.Boo = \"\";\n        //this.selectedTodo.Hoo = \"\";\n        // this.selectedTodo.todo = \"\";\n        // this.selectedTodo.detail = \"\";\n         this.selectedTodo.Hoo = new Date();\n        // this.selectedTodo.status = \"Todo\";\n        // this.selectedTodo.userid = id;\n    }\n    async saveTodo() {\n        let serverResponse;\n        if (this.selectedTodo) {\n            if (this.selectedTodo._id) {\n                let url = this.TODO_SERVICE + \"/\" + this.selectedTodo._id;\n                serverResponse = await this.data.put(this.selectedTodo, url);\n            } else {\n                serverResponse = await this.data.post(this.selectedTodo, this.TODO_SERVICE);\n            }\n            return serverResponse;\n        }\n    }\n    async getTodos(userid) {\n            let url = this.TODO_SERVICE ;//+ '/user/' + userid;\n            let response = await this.data.get(url);\n            if (!response.error) {\n              this.todosArray = response;\n            } else {\n              this.todosArray = [];\n            }\n          }\n\n        async deleteTodo(id){\n            let url = this.TODO_SERVICE + '/' + id;\n            await this.data.delete(url);\n        }\n        \n\n}\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n\n\n@inject(Element)\nexport class FlatPickerCustomElement {\n    backgroundColor = 'white';\n    @bindable config = {};\n    @bindable startdate;\n    @bindable enddate\n    @bindable controlid;\n    @bindable disabled;\n    @bindable({defaultBindingMode: bindingMode.twoWay}) value;\n\n    constructor(element) {\n        this.element = element;\n    }\n\n\tbind() {\n\t\tconst defaultConfig = {\n\t\t\taltInput: true,\n\t\t\taltFormat: \"F j, Y\",\n\t\t\tminDate: this.startdate,\n            maxDate: this.enddate,\n            wrap: true,\n            onReady: function(dateObj, dateStr, instance) {\n                var $cal = $(instance.calendarContainer);\n                if ($cal.find('.flatpickr-clear').length < 1) {\n                    $cal.append('<div class=\"flatpickr-clear\">Clear</div>');\n                    $cal.find('.flatpickr-clear').on('click', function() {\n                        instance.clear();\n                        instance.close();\n                    });\n                }\n            }\n\t\t};\n\n\t\tthis._config = Object.assign({}, defaultConfig, this.config);\n\t\tthis._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n\t}\n\n\tattached() {\n\t\tthis.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n\t\tthis.valueChanged();\n\t}\n\n\tfireEvent(element, type, data) {\n\t\t   let changeEvent;\n\n\t\t\tif (window.CustomEvent) {\n\t\t\t\tchangeEvent = new CustomEvent('change', {\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tvalue: data\n\t\t\t\t\t},\n\t\t\t\t\tbubbles: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tchangeEvent = document.createEvent('CustomEvent');\n\t\t\t\tchangeEvent.initCustomEvent('change', true, true, {\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tvalue: data\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.element.dispatchEvent(changeEvent);\n\t}\n\n\tstartdateChanged(newValue, oldValue) {\n\t\tif(this.flatpickr){\n\t\t\tthis.flatpickr.set(\"minDate\", newValue);\n\t\t}\n\t}\n\n\tenddateChanged(newValue, oldValue) {\n\t\tif(this.flatpickr){\n\t\t\tthis.flatpickr.set(\"maxDate\", newValue);\n\t\t}\n    }\n\n    onChange(selectedDates, dateStr, instance) {\n        if (!this._datesAreSynced(this.value, selectedDates)) {\n\n            switch(selectedDates.length) {\n                case 0:\n                    this.value = undefined;\n                    break;\n                case 1:\n                    this.value = this._cloneDate(selectedDates[0]);\n                    break;\n                default:\n                    this.value = selectedDates.map(d => this._cloneDate(d));\n                    break;\n            }\n        }\n\t\tthis.fireEvent(this.element, 'changeBeginDate', { date: this.value });\n    }\n\n    clear(){\n         if (!this.flatpickr) {\n            return;\n        }\n\n        // this.flatpickr.clear();\n    }\n\n    valueChanged() {\n        if (!this.flatpickr) {\n            return;\n        }\n\n        if (this._datesAreSynced(this.value, this.flatpickr.selectedDates)) {\n            return;\n        }\n\n        let newDate;\n\n        if (!this.value) {\n            newDate = undefined;\n        }\n        else if (!Array.isArray(this.value)) {\n            newDate = this._cloneDate(this.value);\n        }\n        else {\n            newDate = this.value.map(d => this._cloneDate(d));\n        }\n\n        this.flatpickr.setDate(newDate);\n    }\n\n    _datesAreSynced(model, view) {\n        model = model || [];\n\n        let modelDates = Array.isArray(model) ? model : [model];\n\n        for(let d = 0; d < modelDates.length; d++) {\n            let modelDate = modelDates[d];\n\n            if (view.findIndex(v => v.valueOf() === modelDate.valueOf()) > -1) {\n                continue;\n            }\n\n            return false;\n        }\n\n        for(let d = 0; d < view.length; d++) {\n            let viewDate = view[d];\n\n            if (modelDates.findIndex(m => m.valueOf() === viewDate.valueOf()) > -1) {\n                continue;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    _cloneDate(d) {\n        return new Date(d.getTime ? d.valueOf() : d);\n    }\n}\n","<template>\n    <style>\n      .aurelia-flatpickr {\n        background-color: white !important;\n      }\n      .disable{\n        background-color: #eeeeee;\n      }\n    </style>\n    <require from=\"flatpickr/flatpickr.css\"></require>\n     <div class=\"input-group aurelia-flatpickr\">\n      <input type=\"text\" class=\"aurelia-flatpickr form-control enable\" placeholder=\"Select date\" data-input>\n      <span class=\"input-group-btn\">\n        <button style=\"height:39px;\" class=\"btn btn-default\" type=\"button\" data-clear><i class=\"fa fa-trash fa-border\"></i></button>\n      </span>\n  </div>\n</template>\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { AuthService } from 'aurelia-auth';\n\n@inject(Router, AuthService)\nexport class NavBar {\n    constructor(router, auth) {\n        this.authenticated = false;\n        this.router = router;\n        this.auth = auth;\n        this.loginError = '';\n        this.email = \"\";\n        this.password = \"\";\n\n    }\n\n    attached() {\n        $('.navbar-nav a').on('click', function () {\n            $('.navbar-nav').find('li.active').removeClass('active');\n            $(this).parent('li').addClass('active');\n        });\n    }\n\n    login() {\n        //   console.log(this.email);\n        //   console.log(this.password);\n        //  this.authenticated = true;\n        //  this.router.navigate('home');\n        return this.auth.login(this.email, this.password)\n            .then(response => {\n                this.userObj = response.user;\n                sessionStorage.setItem(\"userObj\", JSON.stringify(this.userObj));\n                this.loginError = \"\";\n                this.authenticated = this.auth.isAuthenticated();\n                this.router.navigate('home');\n            })\n            .catch(error => {\n                console.log(error);\n                this.authenticated = false;\n                this.loginError = \"Invalid credentials.\";\n            });\n\n    }\n   \n    \n    logout() {\n        // this.authenticated = false;\n        //  this.router.navigate('landing');\n        this.auth.logout();\n        sessionStorage.removeItem('userObj');\n        this.authenticated = this.auth.isAuthenticated();\n\n    }\n    bind() {\n        this.authenticated = this.auth.isAuthenticated();\n    }\n\n    registerUser(){\n        this.router.navigate('todos')\n    }\n}\n","<template>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a class=\"navbar-brand\" href=\"#\">Things ToDo!</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n  \n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul show.bind=\"authenticated\" class=\"navbar-nav mr-auto\">\n          <!-- <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n          </li> -->\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#users\">Users </a>\n            </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#todos\">Todos </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" click.trigger=\"logout()\">Logout </a>\n          </li>\n        </ul>\n      </div>\n      <div show.bind=\"!authenticated\">\n        <form class=\"form-inline\">\n          <div class=\"form-group mb-2\">\n              <button type=\"submit\"  class=\"btn btn-primary mb-2\">Email</button>\n            <label for=\"staticEmail2\" class=\"sr-only\"> Email ID </label>\n            <input value.bind=\"email\" type=\"text\" class=\"form-control\" id=\"staticEmail2\" value=\"email@example.com\">\n          </div>\n          <div class=\"form-group mx-sm-3 mb-2\">\n            <label for=\"inputPassword2\" class=\"sr-only\">Password</label>\n            <input value.bind=\"password\" type=\"password\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\">\n          </div>\n          <button type=\"submit\" click.trigger=\"login()\" class=\"btn btn-primary mb-2\">Login</button>\n          <button click.trigger=\"registerUser()\" class=\"btn btn-primary mb-2\">Register User</button>\n        </form>\n      </div>\n    </nav>\n  </template>","export function configure(config) {\n  config.globalResources([\n    './elements/nav-bar', \n    './elements/flat-picker/flat-picker',\n    './value-converters/date-format',\n    './value-converters/filter-todos'\n  ]);\n}\n","import moment from 'moment';\n\n\nexport class DateFormatValueConverter {\n    toView(value) {\n        if (value === undefined || value === null) {\n            return;\n        }\n        let dateFormatted = moment(value).format('MMM Do YYYY');\n\n        return dateFormatted;\n    }\n}","export class FilterTodosValueConverter {\n    toView(todos, nofilterTodos) {\n        if (!todos) return;\n        if (!nofilterTodos) return todos;\n        let filteredTodos = [];\n        todos.forEach(todo => {\n            if (todo.status !== 'Completed') filteredTodos.push(todo);\n        });\n        return filteredTodos;\n    }\n}\n"]}