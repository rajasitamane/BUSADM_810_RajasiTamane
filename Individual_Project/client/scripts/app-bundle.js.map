{"version":3,"sources":["../src/app.js","../src/app.html","../src/auth-config.js","../src/environment.js","../src/main.js","../src/modules/components/editUser.html","../src/modules/components/todosForm.html","../src/modules/components/todosTable.html","../src/modules/home.js","../src/modules/home.html","../src/modules/todos.js","../src/modules/todos.html","../src/modules/users.js","../src/modules/users.html","../src/resources/data/data-services.js","../src/resources/data/todo-object.js","../src/resources/data/user-object.js","../src/resources/elements/flat-picker/flat-picker.js","../src/resources/elements/flat-picker/flat-picker.html","../src/resources/elements/nav-bar.js","../src/resources/elements/nav-bar.html","../src/resources/index.js","../src/resources/value-converters/date-format.js","../src/resources/value-converters/filter-todos.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","environment","start","then","setRoot","Home","Router","message","Todos","Todo","todo","userObj","JSON","parse","sessionStorage","getItem","statuses","isCheckedCompleted","attached","getTodos","_id","showForm","updateTodo","selectedTodo","saveTodo","newTodo","editTodo","deleteTodos","Cancel","deleteTodo","Users","User","users","newUser","user","firstName","lastName","active","role","email","password","save","saveUser","logout","navigate","DataServices","HttpClient","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","localStorage","withInterceptor","request","console","log","response","get","url","fetch","json","data","catch","error","post","content","method","body","object","put","delete","TODO_SERVICE","id","detail","dateDue","Date","status","userid","serverResponse","todosArray","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","bindingMode","twoWay","element","backgroundColor","bind","defaultConfig","altInput","altFormat","minDate","startdate","maxDate","enddate","wrap","onReady","dateObj","dateStr","instance","$cal","$","calendarContainer","find","length","append","on","clear","close","_config","Object","assign","onChange","onMonthChange","onYearChange","flatpickr","Flatpickr","querySelector","valueChanged","fireEvent","type","changeEvent","window","CustomEvent","value","bubbles","document","createEvent","initCustomEvent","dispatchEvent","startdateChanged","newValue","oldValue","set","enddateChanged","selectedDates","_datesAreSynced","undefined","_cloneDate","d","date","newDate","Array","isArray","setDate","model","view","modelDates","modelDate","findIndex","v","valueOf","viewDate","m","getTime","bindable","NavBar","AuthService","authenticated","loginError","removeClass","parent","addClass","login","setItem","stringify","isAuthenticated","removeItem","registerUser","globalResources","DateFormatValueConverter","toView","dateFormatted","format","FilterTodosValueConverter","todos","nofilterTodos","filteredTodos","forEach","push"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    // config.addPipelineStep('authorize', AuthorizeStep); \n    config.title = 'Things ToDo';\n    config.map([\n      {\n        route: ['', 'home'],\n        name: 'home',\n        moduleId: 'modules/home',\n        title: 'Home',\n        auth: false\n      },\n      {\n        route: 'users',\n        name: 'users',\n        moduleId: 'modules/users',\n        title: 'Users',\n        auth: true\n\n      },\n      {\n        route: 'todos',\n        name: 'todos',\n        moduleId: 'modules/todos',\n        title: 'Todos',\n        auth: true\n      }\n    ]);\n  }\n}\n","<template>\n  <nav-bar></nav-bar>\n  <router-view></router-view>\n</template>\n","var authConfig = {\n    baseUrl: \"http://localhost:5000/api\",\n    loginUrl: '/users/login',\n    tokenName: 'token',\n    authHeader: 'Authorization',\n    authToken: '',\n    logoutRedirect: '#/home'\n  }\n  \n  export default authConfig;","export default {\n  debug: true,\n  testing: true\n};\n","// regenerator-runtime is to support async/await syntax in ESNext.\n// If you don't use async/await, you can remove regenerator-runtime.\nimport 'regenerator-runtime/runtime';\nimport environment from './environment';\nimport config from './auth-config';\n\n\n// Promise.config({ warnings: { wForgottenReturn: false } });\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig) => {\n      baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","<!-- <template>\n        First Name: <input value.bind=\"user.firstName\">\n        Last Name: <input value.bind=\"user.lastName\">\n    Active: <input value.bind=\"user.active\">\n    Role: <input value.bind=\"user.role\"> \n        Email: <input value.bind=\"user.email\">\n        Password: <input value.bind=\"user.password\">\n        <button click.trigger=\"save()\">Save</button>\n</template> -->\n\n<template>\n  <html>\n\n  <head>\n    <style>\n      table {\n        font-family: arial, sans-serif;\n        border-collapse: collapse;\n        width: 100%;\n      }\n\n      td,\n      th {\n        border: 1px solid #dddddd;\n        text-align: left;\n        padding: 8px;\n      }\n\n      tr:nth-child(even) {\n        background-color: #dddddd;\n      }\n    </style>\n  </head>\n\n  <body>\n\n\n\n    <table>\n\n      <tr>\n        <td>First Name: <input value.bind=\"user.firstName\"></td>\n            <td>Last Name: <input value.bind=\"user.lastName\"></td>\n        <td>Active: <input value.bind=\"user.active\"></td>\n        <td>Role: <input value.bind=\"user.role\"></td>\n            <td>Email: <input value.bind=\"user.email\"></td>\n            <td>Password: <input value.bind=\"user.password\"></td>\n    </table>\n    <button click.trigger=\"save()\">Save</button>\n  </body>\n\n  </html>\n</template>\n","<template>\n        <form>\n                <div class=\"form-group\">\n                  <label for=\"todoInput\">Todo</label>\n                  <input value.bind=\"todo.selectedTodo.todo\" type=\"text\" class=\"form-control\" id=\"todoInput\"\n                    placeholder=\"Todo title\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"todoDetail\">Todo Detail</label>\n                  <textarea value.bind=\"todo.selectedTodo.detail\" class=\"form-control\" id=\"todoDetail\" rows=\"5\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"todoStatus\">Status</label>\n                  <select value.bind=\"todo.selectedTodo.status\" class=\"form-control\" id=\"todoStatus\">\n                    <option repeat.for=\"status of statuses\" model.bind=\"status\">${status}</option>\n                  </select>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"todoStatus\">Due Date</label>\n                  <flat-picker controlid=\"startDate\" value.bind=\"todo.selectedTodo.dateDue\"></flat-picker>\n                </div>\n                <button class=\"btn btn-primary\" click.trigger=\"saveTodo()\">Save</button>\n                <button class=\"btn btn-primary\" click.trigger=\"cancel()\">Cancel</button>\n              </form>\n    </template>\n","<template>\n    <button class=\"btn btn-primary\" click.trigger=\"newTodo()\" style=\"margin-bottom:10px;\">Create Todo</button>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th colspan=\"3\">\n                    <div class=\"checkbox leftMargin\"><label><input checked.bind=\"isCheckedCompleted\" type=\"checkbox\">\n                            Filter out Completed Todos</label></div>\n                </th>\n            </tr>\n            <tr>\n                <th scope=\"col\">Todo</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Due Date</th>\n                <th scope=\"col\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr repeat.for=\"todo of todo.todosArray | filterTodos:isCheckedCompleted\">\n                <td scope=\"row\" click.delegate=\"editTodo(todo)\">${todo.todo}</td>\n                <td><select change.delegate=\"updateTodo(todo)\" value.bind=\"todo.status\" class=\"form-control\"\n                        id=\"todoStatus\">\n                        <option repeat.for=\"status of statuses\" value.bind=\"status\">${status}</option>\n                    </select></td>\n                <td>${todo.dateDue | dateFormat}</td>\n                <td>\n                    <button click.trigger=\"deleteTodo(todo)\" onClick=\"window.location.href=window.location.href\" type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\n@inject(Router)\nexport class Home {\n  constructor(router) {\n    this.router = router;\n    this.message = 'Home';\n  }\n\n  // login() {\n  //   this.router.navigate('users');\n  // }\n}\n","<template>\n\t<h1>${message}</h1>\n\t<!-- <button class=\"btn btn-primary\" click.trigger=\"login()\">Login</button> -->\n</template>\n","import { inject } from 'aurelia-framework';\nimport { Todo } from '../resources/data/todo-object';\n\n@inject(Todo)\nexport class Todos {\n\n  constructor(todo) {\n    this.todo = todo;\n    this.userObj = JSON.parse(sessionStorage.getItem('userObj'));\n    this.statuses = ['Todo', 'In Process', 'Completed'];\n    this.isCheckedCompleted = true;\n  }\n\n  async attached() {\n    await this.getTodos();\n  }\n  async getTodos() {\n    await this.todo.getTodos(this.userObj._id);\n    this.showForm = false;\n  }\n\n  updateTodo(todo) {\n    this.todo.selectedTodo = todo;\n    this.saveTodo();\n  }\n\n\n\n  newTodo() {\n    this.todo.newTodo(this.userObj._id);\n    this.showForm = true;\n  }\n\n  editTodo(todo) {\n    this.todo.selectedTodo = todo;\n    this.showForm = true;\n  }\n\n  async saveTodo() {\n    await this.todo.saveTodo()\n    this.getTodos();\n  }\n\n  async deleteTodos() {\n    await this.todo.deleteTodos(this.todo._id);\n    this.getTodos();\n  }\n\n  Cancel() {\n    this.showForm = false;\n  }\n\n  updateTodo(todo) {\n    this.todo.selectedTodo = todo;\n    this.saveTodo();\n  }\n  async deleteTodo(todo) {\n    await this.todo.deleteTodo(todo._id);\n    this.getTodos();\n  }\n\n}\n\n","<template>\n\n<div class=\"container\" style=\"margin-top:75px;\">\n        <compose show.bind=\"showForm\" view=\"./components/todosForm.html\"></compose>\n        <compose show.bind=\"!showForm\" view=\"./components/todosTable.html\"></compose>\n      </div>\n\n    </template>","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { User } from '../resources/data/user-object';\n\n@inject(Router, User)\nexport class Users {\n  constructor(router, users) {\n    this.router = router;\n    this.users = users;\n    this.message = \"Users\";\n  }\n\n  newUser() {\n    this.user = {\n      firstName: \"\",\n      lastName: \"\",\n      active: true,\n      role: \"user\",\n      email: \"\",\n      password: \"\"\n    }\n    //this.showUserEditForm = true;\n  }\n\n  async save() {\n    if (this.user && this.user.firstName && this.user.lastName\n      && this.user.email && this.user.password) {\n      await this.users.saveUser(this.user);\n    }\n  }\n\n\n  logout() {\n    this.router.navigate('home');\n  }\n\n}\n","<template>\n        <h1>${message}</h1>\n        <button click.trigger=\"newUser()\">New User</button>\n         <compose view=\"./components/editUser.html\"></compose>\n</template>","import { inject } from 'aurelia-framework';\nimport { HttpClient, json } from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n    \n    constructor(http) {\n        this.httpClient = http;\n        this.BASE_URL = \"http://localhost:5000/api/\";\n        this.httpClient.configure(config => {\n            config\n                .withBaseUrl(this.BASE_URL)\n                .withDefaults({\n                    credentials: 'same-origin',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-Requested-With': 'Fetch',\n                        'Authorization' : 'Bearer' + localStorage.getItem('aurelia_token')\n                    }\n                })\n                .withInterceptor({\n                    request(request) {\n                        console.log('Requesting ${request.method} ${request.url}');\n                        return request;\n                    }, \n                    response(response) {\n                        console.log('Received ${response.status} ${response.url}');\n                        return response;\n                    }\n                });\n        });\n\n    }\n    get(url) {\n        return this.httpClient.fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    post(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    put(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'put',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    delete(url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'delete'\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n}\n","import {inject} from 'aurelia-framework';\nimport { DataServices } from './data-services';\n@inject(DataServices)\nexport class Todo {\n    constructor(data) {\n        this.data = data;\n        this.TODO_SERVICE = 'todos';\n    }\n    newTodo(id) {\n        this.selectedTodo = {};\n        this.selectedTodo.todo = \"\";\n        this.selectedTodo.detail = \"\";\n        this.selectedTodo.dateDue = new Date();\n        this.selectedTodo.status = \"Todo\";\n        this.selectedTodo.userid = id;\n    }\n    async saveTodo() {\n        let serverResponse;\n        if (this.selectedTodo) {\n            if (this.selectedTodo._id) {\n                let url = this.TODO_SERVICE + \"/\" + this.selectedTodo._id;\n                serverResponse = await this.data.put(this.selectedTodo, url);\n            } else {\n                serverResponse = await this.data.post(this.selectedTodo, this.TODO_SERVICE);\n            }\n            return serverResponse;\n        }\n    }\n    async getTodos(userid) {\n            let url = this.TODO_SERVICE + '/user/' + userid;\n            let response = await this.data.get(url);\n            if (!response.error) {\n              this.todosArray = response;\n            } else {\n              this.todosArray = [];\n            }\n          }\n\n        async deleteTodo(id){\n            let url = this.TODO_SERVICE + '/' + id;\n            await this.data.delete(url);\n        }\n        \n\n}","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n@inject(DataServices)\nexport class User {\nconstructor(data) {\n        this.data = data;\n        this.USER_SERVICE = 'users';\n    }\nasync saveUser(user){\n    if(user){\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\n         return serverResponse;\n }\n}\n\n}\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n\n\n@inject(Element)\nexport class FlatPickerCustomElement {\n    backgroundColor = 'white';\n    @bindable config = {};\n    @bindable startdate;\n    @bindable enddate\n    @bindable controlid;\n    @bindable disabled;\n    @bindable({defaultBindingMode: bindingMode.twoWay}) value;\n\n    constructor(element) {\n        this.element = element;\n    }\n\n\tbind() {\n\t\tconst defaultConfig = {\n\t\t\taltInput: true,\n\t\t\taltFormat: \"F j, Y\",\n\t\t\tminDate: this.startdate,\n            maxDate: this.enddate,\n            wrap: true,\n            onReady: function(dateObj, dateStr, instance) {\n                var $cal = $(instance.calendarContainer);\n                if ($cal.find('.flatpickr-clear').length < 1) {\n                    $cal.append('<div class=\"flatpickr-clear\">Clear</div>');\n                    $cal.find('.flatpickr-clear').on('click', function() {\n                        instance.clear();\n                        instance.close();\n                    });\n                }\n            }\n\t\t};\n\n\t\tthis._config = Object.assign({}, defaultConfig, this.config);\n\t\tthis._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n\t}\n\n\tattached() {\n\t\tthis.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n\t\tthis.valueChanged();\n\t}\n\n\tfireEvent(element, type, data) {\n\t\t   let changeEvent;\n\n\t\t\tif (window.CustomEvent) {\n\t\t\t\tchangeEvent = new CustomEvent('change', {\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tvalue: data\n\t\t\t\t\t},\n\t\t\t\t\tbubbles: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tchangeEvent = document.createEvent('CustomEvent');\n\t\t\t\tchangeEvent.initCustomEvent('change', true, true, {\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tvalue: data\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.element.dispatchEvent(changeEvent);\n\t}\n\n\tstartdateChanged(newValue, oldValue) {\n\t\tif(this.flatpickr){\n\t\t\tthis.flatpickr.set(\"minDate\", newValue);\n\t\t}\n\t}\n\n\tenddateChanged(newValue, oldValue) {\n\t\tif(this.flatpickr){\n\t\t\tthis.flatpickr.set(\"maxDate\", newValue);\n\t\t}\n    }\n\n    onChange(selectedDates, dateStr, instance) {\n        if (!this._datesAreSynced(this.value, selectedDates)) {\n\n            switch(selectedDates.length) {\n                case 0:\n                    this.value = undefined;\n                    break;\n                case 1:\n                    this.value = this._cloneDate(selectedDates[0]);\n                    break;\n                default:\n                    this.value = selectedDates.map(d => this._cloneDate(d));\n                    break;\n            }\n        }\n\t\tthis.fireEvent(this.element, 'changeBeginDate', { date: this.value });\n    }\n\n    clear(){\n         if (!this.flatpickr) {\n            return;\n        }\n\n        // this.flatpickr.clear();\n    }\n\n    valueChanged() {\n        if (!this.flatpickr) {\n            return;\n        }\n\n        if (this._datesAreSynced(this.value, this.flatpickr.selectedDates)) {\n            return;\n        }\n\n        let newDate;\n\n        if (!this.value) {\n            newDate = undefined;\n        }\n        else if (!Array.isArray(this.value)) {\n            newDate = this._cloneDate(this.value);\n        }\n        else {\n            newDate = this.value.map(d => this._cloneDate(d));\n        }\n\n        this.flatpickr.setDate(newDate);\n    }\n\n    _datesAreSynced(model, view) {\n        model = model || [];\n\n        let modelDates = Array.isArray(model) ? model : [model];\n\n        for(let d = 0; d < modelDates.length; d++) {\n            let modelDate = modelDates[d];\n\n            if (view.findIndex(v => v.valueOf() === modelDate.valueOf()) > -1) {\n                continue;\n            }\n\n            return false;\n        }\n\n        for(let d = 0; d < view.length; d++) {\n            let viewDate = view[d];\n\n            if (modelDates.findIndex(m => m.valueOf() === viewDate.valueOf()) > -1) {\n                continue;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    _cloneDate(d) {\n        return new Date(d.getTime ? d.valueOf() : d);\n    }\n}\n","<template>\n    <style>\n      .aurelia-flatpickr {\n        background-color: white !important;\n      }\n      .disable{\n        background-color: #eeeeee;\n      }\n    </style>\n    <require from=\"flatpickr/flatpickr.css\"></require>\n     <div class=\"input-group aurelia-flatpickr\">\n      <input type=\"text\" class=\"aurelia-flatpickr form-control enable\" placeholder=\"Select date\" data-input>\n      <span class=\"input-group-btn\">\n        <button style=\"height:39px;\" class=\"btn btn-default\" type=\"button\" data-clear><i class=\"fa fa-trash fa-border\"></i></button>\n      </span>\n  </div>\n</template>\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { AuthService } from 'aurelia-auth';\n\n@inject(Router, AuthService)\nexport class NavBar {\n    constructor(router, auth) {\n        this.authenticated = false;\n        this.router = router;\n        this.auth = auth;\n        this.loginError = '';\n        this.email = \"\";\n        this.password = \"\";\n\n    }\n\n    attached() {\n        $('.navbar-nav a').on('click', function () {\n            $('.navbar-nav').find('li.active').removeClass('active');\n            $(this).parent('li').addClass('active');\n        });\n    }\n\n    login() {\n        //   console.log(this.email);\n        //   console.log(this.password);\n        //  this.authenticated = true;\n        //  this.router.navigate('home');\n        return this.auth.login(this.email, this.password)\n            .then(response => {\n                this.userObj = response.user;\n                sessionStorage.setItem(\"userObj\", JSON.stringify(this.userObj));\n                this.loginError = \"\";\n                this.authenticated = this.auth.isAuthenticated();\n                this.router.navigate('home');\n            })\n            .catch(error => {\n                console.log(error);\n                this.authenticated = false;\n                this.loginError = \"Invalid credentials.\";\n            });\n\n    }\n   \n    \n    logout() {\n        // this.authenticated = false;\n        //  this.router.navigate('landing');\n        this.auth.logout();\n        sessionStorage.removeItem('userObj');\n        this.authenticated = this.auth.isAuthenticated();\n\n    }\n    bind() {\n        this.authenticated = this.auth.isAuthenticated();\n    }\n\n    registerUser(){\n        this.router.navigate('users')\n    }\n}\n","<template>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a class=\"navbar-brand\" href=\"#\">Things ToDo!</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n  \n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul show.bind=\"authenticated\" class=\"navbar-nav mr-auto\">\n          <!-- <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n          </li> -->\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#users\">Users </a>\n            </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#todos\">Todos </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" click.trigger=\"logout()\">Logout </a>\n          </li>\n        </ul>\n      </div>\n      <div show.bind=\"!authenticated\">\n        <form class=\"form-inline\">\n          <div class=\"form-group mb-2\">\n              <!-- <button type=\"submit\"  class=\"btn btn-primary mb-2\">Email</button> -->\n            <label for=\"staticEmail2\" class=\"sr-only\"> Email ID </label>\n            <input value.bind=\"email\" type=\"text\" class=\"form-control\" id=\"staticEmail2\" placeholder=\"Username\">\n          </div>\n          <div class=\"form-group mx-sm-3 mb-2\">\n            <label for=\"inputPassword2\" class=\"sr-only\">Password</label>\n            <input value.bind=\"password\" type=\"password\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\">\n          </div>\n          <button type=\"submit\" click.trigger=\"login()\" class=\"btn btn-primary mb-2\">Login</button>\n          <button click.trigger=\"registerUser()\" class=\"btn btn-primary mb-2\">Register User</button>\n        </form>\n      </div>\n    </nav>\n  </template>\n","export function configure(config) {\n  config.globalResources([\n    './elements/nav-bar', \n    './elements/flat-picker/flat-picker',\n    './value-converters/date-format',\n    './value-converters/filter-todos'\n  ]);\n}\n","import moment from 'moment';\n\n\nexport class DateFormatValueConverter {\n    toView(value) {\n        if (value === undefined || value === null) {\n            return;\n        }\n        let dateFormatted = moment(value).format('MMM Do YYYY');\n\n        return dateFormatted;\n    }\n}","export class FilterTodosValueConverter {\n    toView(todos, nofilterTodos) {\n        if (!todos) return;\n        if (!nofilterTodos) return todos;\n        let filteredTodos = [];\n        todos.forEach(todo => {\n            if (todo.status !== 'Completed') filteredTodos.push(todo);\n        });\n        return filteredTodos;\n    }\n}\n"]}